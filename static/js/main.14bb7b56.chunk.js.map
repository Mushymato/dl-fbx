{"version":3,"sources":["fbx sync /^/.*/.fbx$","fbx sync /^/.*/.png$","fbx/c110349_01.fbx","fbx/c110349_01.png","viewer.js","Model.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","OrbitControls","require","THREE","FBXLoader","ReactThreeVisor","checkProps","cameraPosition","props","x","y","z","controlsPosition","viewport","width","window","innerWidth","height","innerHeight","angle","far","near","lights","ligths","animate","requestAnimationFrame","mixers","length","i","update","clock","getDelta","renderer","render","scene","camera","init","position","set","controls","target","background","light","add","castShadow","shadow","top","bottom","left","right","model","load","object","material","texture","skinning","traverse","child","isMesh","Array","isArray","receiveShadow","mixer","push","animations","clipAction","play","s","handleLoad","error","handleError","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","container","appendChild","domElement","onLoad","onLoading","onError","this","ref","el","Component","Model","state","asset","match","params","prevProps","location","setState","console","log","modelExists","Fragment","backgroundColor","React","withRouter","App","basename","path","children","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14bb7b56.chunk.js","sourcesContent":["var map = {\n\t\"./c110349_01.fbx\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","var map = {\n\t\"./c110349_01.png\": 35\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/c110349_01.bd712ffb.fbx\";","module.exports = __webpack_public_path__ + \"static/media/c110349_01.cb5b2597.png\";","/**\r\n * @class ExampleComponent\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as THREE from 'three';\r\nlet OrbitControls = require('three-orbit-controls')(THREE);\r\nlet FBXLoader = require('three-fbxloader-offical');\r\n\r\nexport default class ReactThreeVisor extends Component {\r\n    static propTypes = {\r\n        model: PropTypes.string,\r\n        texture: PropTypes.string,\r\n        backgroundColor: PropTypes.number,\r\n        viewport: PropTypes.object,\r\n        cameraPosition: PropTypes.object,\r\n        controlsPosition: PropTypes.object,\r\n        angle: PropTypes.number,\r\n        far: PropTypes.number,\r\n        near: PropTypes.number,\r\n        onError: PropTypes.func,\r\n        onLoading: PropTypes.func\r\n    };\r\n\r\n    checkProps = () => {\r\n        this.cameraPosition = this.props.cameraPosition || { x: 2, y: 0, z: 10 };\r\n        this.controlsPosition = this.props.controlsPosition || { x: 0, y: 0, z: 0 };\r\n        this.viewport = this.props.viewport || { width: window.innerWidth, height: window.innerHeight };\r\n        this.angle = this.props.angle || 45;\r\n        this.far = this.props.far || 2000;\r\n        this.near = this.props.near || 1;\r\n        this.lights = this.props.ligths || null;\r\n    }\r\n\r\n    // onWindowResize = () => {\r\n    //     this.camera.aspect = this.viewport.width / this.viewport.height;\r\n    //     this.camera.updateProjectionMatrix();\r\n    //     this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n    // }\r\n\r\n    animate = () => {\r\n        requestAnimationFrame(this.animate);\r\n        if (this.mixers.length > 0) {\r\n            for (var i = 0; i < this.mixers.length; i++) {\r\n                this.mixers[i].update(this.clock.getDelta());\r\n            }\r\n        }\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n    init = () => {\r\n        // mixers\r\n        this.mixers = [];\r\n        this.clock = new THREE.Clock();\r\n\r\n        // Camera\r\n        this.camera = new THREE.PerspectiveCamera(this.angle, this.viewport.width / this.viewport.height, this.near, this.far);\r\n        this.camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\r\n\r\n        // Controls\r\n        this.controls = new OrbitControls(this.camera);\r\n        this.controls.target.set(this.controlsPosition.x, this.controlsPosition.y, this.controlsPosition.z);\r\n        this.controls.update();\r\n\r\n        // Scene\r\n        this.scene = new THREE.Scene();\r\n        // this.scene.background = new THREE.Color(this.props.backgroundColor);\r\n        this.scene.background = new THREE.Color(0xffffff);\r\n        //this.scene.fog = new THREE.Fog(0xa0a0a0, 200, 1000);\r\n\r\n        // Light\r\n        let light = new THREE.HemisphereLight(0xffffff, 0x444444);\r\n        light.position.set(0, 200, 0);\r\n        this.scene.add(light);\r\n        light = new THREE.DirectionalLight(0xffffff);\r\n        light.position.set(0, 200, 100);\r\n        light.castShadow = true;\r\n        light.shadow.camera.top = 180;\r\n        light.shadow.camera.bottom = -100;\r\n        light.shadow.camera.left = -120;\r\n        light.shadow.camera.right = 120;\r\n        light = new THREE.DirectionalLight(0xffffff);\r\n        this.scene.add(light);\r\n        light = new THREE.AmbientLight(0x222222);\r\n        this.scene.add(light);\r\n\r\n        // model\r\n        if (this.props.model) {\r\n            let loader = new FBXLoader();\r\n            loader.load(this.props.model, (object) => {\r\n                let material = null;\r\n                if (this.props.texture) {\r\n                    const texture = new THREE.TextureLoader().load(this.props.texture);\r\n                    material = new THREE.MeshBasicMaterial({ map: texture, skinning: true });\r\n                }\r\n\r\n                object.traverse(function (child) {\r\n                    if (child.isMesh) {\r\n                        if (material !== null) {\r\n                            if (Array.isArray(child.material)) {\r\n                                child.material.map(() => { return material; });\r\n                            } else {\r\n                                child.material = material;\r\n                            }\r\n                        }\r\n                        child.castShadow = true;\r\n                        child.receiveShadow = true;\r\n                    }\r\n                });\r\n\r\n                object.mixer = new THREE.AnimationMixer(object);\r\n                if (object.mixer) {\r\n                    this.mixers.push(object.mixer);\r\n                }\r\n\r\n                if (object.animations[0]) {\r\n                    let action = object.mixer.clipAction(object.animations[0]);\r\n                    action.play();\r\n                }\r\n\r\n                this.scene.add(object);\r\n            }, (s) => {\r\n                this.handleLoad(s);\r\n            }, (error) => {\r\n                this.handleError(error);\r\n            });\r\n        }\r\n\r\n        // Renderer\r\n        this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        // this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n        this.renderer.setSize(this.viewport.width, this.viewport.height);\r\n        // this.renderer.setViewport(0, 0, this.viewport.width, this.viewport.height);\r\n        this.renderer.shadowMap.enabled = true;\r\n        this.container.appendChild(this.renderer.domElement);\r\n        // window.addEventListener('resize', this.onWindowResize.bind(this), false);\r\n        this.animate();\r\n    }\r\n\r\n    handleLoad = (e) => {\r\n        if (this.props.onLoad) {\r\n            this.props.onLoading(e);\r\n        }\r\n    }\r\n\r\n    handleError = (e) => {\r\n        if (this.props.onError) {\r\n            this.props.onError(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkProps();\r\n        this.init();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={(el) => { this.container = el; }} />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactThreeFbxViewer from './viewer';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// let fbxUrl = require('./fbx/asd.fbx');\r\n\r\nclass Model extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            asset: this.props.match.params.asset\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            this.setState({ asset: this.props.match.params.asset });\r\n        }\r\n    }\r\n    onLoad(e) {\r\n        console.log(e);\r\n    }\r\n    onError(e) {\r\n        console.log(e);\r\n    }\r\n    modelExists() {\r\n        try {\r\n            require.resolve(`./fbx/${this.state.asset}.fbx`);\r\n            require.resolve(`./fbx/${this.state.asset}.png`);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.modelExists()) {\r\n            return <React.Fragment></React.Fragment>\r\n        }\r\n        const model = require(`./fbx/${this.state.asset}.fbx`);\r\n        const texture = require(`./fbx/${this.state.asset}.png`);\r\n        const backgroundColor = 0x000000;\r\n        const angle = 0;\r\n        const near = 1;\r\n        const far = 100;\r\n        const viewport = {\r\n            width: 400,\r\n            height: 800,\r\n        }\r\n        const cameraPosition = {\r\n            x: 0,\r\n            y: 0,\r\n            z: 3\r\n        };\r\n        const controlsPosition = {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0\r\n        }\r\n        return (\r\n            <ReactThreeFbxViewer\r\n                model={model}\r\n                texture={texture}\r\n                backgroundColor={backgroundColor}\r\n                angle={angle}\r\n                near={near}\r\n                far={far}\r\n                viewport={viewport}\r\n                cameraPosition={cameraPosition}\r\n                controlsPosition={controlsPosition}\r\n                onLoading={this.onLoad}\r\n                onError={this.onError} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Model);","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Model from './Model';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename=\"/dl-fbx\">\n        <Switch>\n          <Route path=\"/:asset\" children={<Model />} />\n        </Switch>\n      </BrowserRouter>)\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}